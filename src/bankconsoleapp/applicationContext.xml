<?xml version='1.0' encoding='UTF-8' ?>
<!-- was: <?xml version="1.0" encoding="UTF-8"?> -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <!--bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:location="/WEB-INF/jdbc.properties" />

<bean id="dataSource"
    class="org.springframework.jdbc.datasource.DriverManagerDataSource"
    p:driverClassName="${jdbc.driverClassName}"
    p:url="${jdbc.url}"
    p:username="${jdbc.username}"
    p:password="${jdbc.password}" /-->

    <!-- ADD PERSISTENCE SUPPORT HERE (jpa, hibernate, etc) -->

    <!-- Tells Spring to use annotations for configuring java class beans -->
    <context:annotation-config />
    <context:component-scan base-package="bankconsoleapp" />
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
    
    <!-- This starts up JPA and Hibernate in our application -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <!-- Must match the name given in the persistence unit file -->
        <property name="persistenceUnitName" value="punit" />
        <!-- Refers to the Bean defined below -->
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter">
            <!--Defines that we are using Hibernate as our JPA provider -->
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <!-- Shows the SQL that is executing behind the scenes for debugging -->
                <property name="showSql" value="true" />
            </bean>
        </property>
        <!-- Defines properties on our database such as create and drop tables -->
        <property name="jpaPropertyMap">
            <map>
                <!-- Specifies the vendor we are using for our database implementation -->
                <entry key="hibernate.dialect" value="org.hibernate.dialect.DerbyTenSevenDialect" />
                <!-- Properties on the connection string -->
                <entry key="hibernate.hbm2ddl.auto" value="update" />
                <!-- Makes it pretty :-)  -->
                <entry key="hibernate.format_sql" value="true" />    
            </map>
        </property>
    </bean>
    
    <!-- Makes a transaction manager available for us -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <!-- Allows us to configure transaction via annotations -->
    <tx:annotation-driven transaction-manager="transactionManager" />
    
    <!-- Configures the connection to our datasource -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.apache.derby.jdbc.ClientDriver" />
        <property name="url" value="jdbc:derby://localhost:1527/BankDatabase;create=true" />
    </bean>
</beans>



